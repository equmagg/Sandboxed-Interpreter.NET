//Interpreter test

//1 Variables and arithmetic operations
int a = 10;
int b = 3;
int sum  = a + b;
int diff = a - b;
int prod = a * b;
int quot = a / b;
int mod  = a % b;

//2 Boolean comparisons
bool greater = a > b;
bool eq      = a == b;

//3 Ternary operator
string size = a > 15 ? "large" : a > 8 ? "medium" : "small";


//4 String interpolation + escape + reallocate
string greeting = $"\"Hello, {size} world!\" {a+b}";
greeting += ":";

//5 pointers
int num = 23;
int* pNum = &num;
IntPtr pGreeting = &greeting;

//6 Recursive function + func declaration lifting
int fact5 = factorial(5);   // = 120
int factorial(int n) 
{
    return n <= 1 ? 1 : n * factorial(n - 1);
}


//7 While loop
int total = 0;
while(total < 10)
{
total += 2;
}

//8 Logical operators
bool complex = (a > 5 && b < 5) || !(a == 7);

//9 Exception handling
try
{
    throw "Frown from try";
}
catch(e)
{
    WriteLine($"catched e: {e}");
}
finally
{
    WriteLine("finally block");
}

//10 Conditional statement
print(typeof(greater));
if (!greater) 
{
    print("a is greater than b");
} 
else if(a>0)
{
    print("a is not greater than b, but greater then null");
}
else 
{
    print("a is not greater than b");
}

//11 switch case
string type = "string";
switch (type)
{
    case "int": print("case int"); break;
    case "string": print("case string"); break;
    default: print("case default"); 
}

//12 Arrays (but not string[])
int[] arr = new int[4];
for(int i = 0; i < arr.Length(); i++)
{
    arr[i] = 1;
}
Add("arr", 2);
print("sum= " + sum);
print("diff= " + diff);
print("prod= " + prod);
print("quot= " + quot);
print("mod= " + mod);
print("greater= " + greater);
print("eq= " + eq);
print("size= " + size);
print("fact5= " + fact5);
print("total= " + total);
print("complex= " + complex);
print("greeting=  " +greeting);
print("address of greeting= " + pGreeting);
print("dereference of greeting= " + *pGreeting);
print("num value= " + num);
print("num address= " + pNum);
print("num dereference= " + *pNum);
for(int i = 0; i < arr.Length(); i++) print(arr[i]);

var obj = GetTest();
obj.Hello();
while(true)
{
    //will be timedout
}